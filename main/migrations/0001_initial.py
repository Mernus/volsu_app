# Generated by Django 3.1.4 on 2021-01-04 22:30

import colorfield.fields
import django.contrib.postgres.fields.citext
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import timezone_field.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='Имя аккаунта')),
                ('shortname', models.CharField(max_length=3, unique=True, verbose_name='Короткое имя аккаунта')),
                ('added', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Дата последнего изменения')),
                ('timezone', timezone_field.fields.TimeZoneField(default='Europe/Moscow', verbose_name='Часовой пояс')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Мейл аккаунта')),
                ('level', models.IntegerField(choices=[(0, 'Пользователь'), (1, 'Организатор'), (2, 'Администратор')], default=0, verbose_name='Уровень прав аккаунта')),
            ],
            options={
                'verbose_name': 'Аккаунт',
                'verbose_name_plural': 'Аккаунты',
                'ordering': ['-level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('title', django.contrib.postgres.fields.citext.CICharField(max_length=50, unique=True, verbose_name='Тег')),
                ('back_color', colorfield.fields.ColorField(default='#FFFFFF', max_length=18, verbose_name='Цвет бэкграунда тега')),
                ('title_color', colorfield.fields.ColorField(default='#000000', max_length=18, verbose_name='Цвет тега')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Название события')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from=['author', 'title'])),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='Время и дата начала события')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='Время и дата конца события')),
                ('status', models.IntegerField(choices=[(0, 'На этапе согласования'), (1, 'Ожидается начало'), (2, 'В процессе проведения'), (3, 'Прошло')], default=0, verbose_name='Статус события')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.account', verbose_name='Организатор события')),
                ('participants', models.ManyToManyField(blank=True, related_name='participants', to='main.Account', verbose_name='Участники события')),
                ('tags', models.ManyToManyField(blank=True, to='main.Tag', verbose_name='Теги события')),
            ],
            options={
                'verbose_name': 'Событие',
                'verbose_name_plural': 'События',
                'ordering': ['start_date'],
            },
        ),
    ]
